<% include('../layouts/header.ejs')%>



<link
rel="icon"
href="/static/adminfile/assets/img/kaiadmin/favicon.ico"
type="image/x-icon"
/>

<!-- Fonts and icons -->
<script src="/static/adminfile/assets/js/plugin/webfont/webfont.min.js"></script>
<script>
WebFont.load({
  google: { families: ["Public Sans:300,400,500,600,700"] },
  custom: {
    families: [
      "Font Awesome 5 Solid",
      "Font Awesome 5 Regular",
      "Font Awesome 5 Brands",
      "simple-line-icons",
    ],
    urls: ["/static/adminfile/assets/css/fonts.min.css"],
  },
  active: function () {
    sessionStorage.fonts = true;
  },
});
</script>

<!-- CSS Files -->
<link rel="stylesheet" href="/static/adminfile/assets/css/bootstrap.min.css" />
<link rel="stylesheet" href="/static/adminfile/assets/css/plugins.min.css" />
<link rel="stylesheet" href="/static/adminfile/assets/css/kaiadmin.min.css" />

<!-- CSS Just for demo purpose, don't include it in your project -->
<link rel="stylesheet" href="/static/adminfile/assets/css/demo.css" />
</head>
<body>
<div class="wrapper">
<!-- Sidebar -->
<!-- Sidebar -->
<div class="sidebar" data-background-color="dark">
  <div class="sidebar-logo">
    <!-- Logo Header -->
    <div class="logo-header" data-background-color="dark">
      <a href="index.html" class="logo">
        <img
          src="/static/adminfile/assets/img/kaiadmin/logo_light.svg"
          alt="navbar brand"
          class="navbar-brand"
          height="20"
        />
      </a>
    </div>
    <!-- End Logo Header -->
  </div>
  <div class="sidebar-wrapper scrollbar scrollbar-inner">
    <div class="sidebar-content">
      <ul class="nav nav-secondary">
        <li class="nav-item">
          <a
            data-bs-toggle="collapse"
            href="#dashboard"
            class="collapsed"
            aria-expanded="false"
          >
            <i class="fas fa-homee"></i>
            <p>Dashboard</p>
           </a>
        </li>
       <li class="nav-item">
          <a data-bs-toggle="collapse" href="/admin/categories">
            <i class="fas fa-pen-squaree"></i>
            <p>Categories</p>
          </a>
        </li>
       <li class="nav-item">
          <a data-bs-toggle="collapse" href="/admin/users">
            <i class="fas fa-pen-squaree"></i>
            <p>Users</p>
          </a>
        </li>
        <li class="nav-item">
          <a  href="/admin/product">
            <i class="fas fa-pen-squaree"></i>
            <p>products</p>
           </a>
         </li>
        <li class="nav-item">
          <a data-bs-toggle="collapse" href="/admin/brand">
            <i class="fas fa-tablee"></i>
            <p>Brands</p>
           </a>
         </li>
        <li class="nav-item">
          <a data-bs-toggle="collapse" href="/admin/order">
            <i class="fas fa-map-marker-altt"></i>
            <p>Orders</p>
         </a>
         </li>
        <li class="nav-item">
          <a data-bs-toggle="collapse" href="/admin/coupon">
            <i class="far fa-chart-barr"></i>
            <p>Coupons</p>
          </a>
         </li>
        <li class="nav-item active">
          <a href="/admin/offer">
            <i class="fas fa-desktopp"></i>
            <p>Offers</p>
           </a>
        </li>
        <li class="nav-item">
          <a data-bs-toggle="collapse" href="/admin/logout">
            <i class="fas fa-barss"></i>
            <p>Log out</p>
           </a>
        </li>
      </ul>
    </div>
  </div>
</div>
<!-- End Sidebar -->

<div class="main-panel">
  <div class="main-header">
    <div class="main-header-logo">
    
      <!-- Logo Header -->
      <div class="logo-header" data-background-color="dark">
      
        <div class="nav-toggle">
          <button class="btn btn-toggle toggle-sidebar">
            <i class="gg-menu-right"></i>
          </button>
          <button class="btn btn-toggle sidenav-toggler">
            <i class="gg-menu-left"></i>
          </button>
        </div>
        <button class="topbar-toggler more">
          <i class="gg-more-vertical-alt"></i>
        </button>
      </div>
      <!-- End Logo Header -->
    </div>
    <!-- Navbar Header -->
   
    <!-- End Navbar -->
  </div>

  <div class="container mt-5">
        <nav class="navbar navbar-expand-lg navbar-light bg-light">
               <div class="container-fluid">
                           <div class="collapse navbar-collapse justify-content-between">
                             <button type="button" class="btn btn-success mt-3" data-bs-toggle="modal" data-bs-target="#addOfferModal">
                               Add offer
                             </button>
                           </div>
  
                  <div class="collapse navbar-collapse justify-content-end">
                    <!-- <button class="btn btn-outline-secondary" type="button">
                      <a href="/admin/couponRecovery" style="text-decoration: none; color: black;">Recovery</a>
                    </button> -->
                  </div>
               </div>
           </nav>
  
          <% if(offers.length > 0) { %>
      <div class="d-flex flex-row flex-wrap justify-content-left ms-5">
        <% offers.forEach((offer) => { %>
          <div class="card m-3" style="width: 270px;">
            <div class="card-body d-flex flex-column align-items-left ">
              <h5 class="card-title text-center mb-3"><%= offer.offerName %></h5>
                <% if(offer.offerType === 'product'){ %>
                    <p><strong>Offer type:</strong> product</p>
              <p><strong>product :</strong> <%= offer.productOffer.productName %></p>
                <% }else if(offer.offerType === 'category'){ %> 
                    <p><strong>Offer type:</strong> Category</p>
                    <p><strong>Category :</strong> <%= offer.categoryOffer.categoryName %></p>
                <% } %>
             
              <p><strong>Discount Percentage :</strong> <%= offer.discountPercentage %></p>
              <p><strong>redeemAmount :</strong> <%= offer.maxRedeem %></p> %>
              <p><strong>Offer description :</strong> <%= offer.offerDescription %></p>
              <div class="d-flex justify-content-center">
                <button class="btn btn-primary me-2" id="<%= offer._id %>" onclick="openEditModal('<%= offer._id %>', '<%= offer.offerName %>','<%= offer.offerType%>','<%= offer.discountPercentage %>','<%= offer.maxRedeem %>','<%= offer.offerDescription %>','<%= offer.offerType === "product" ? offer.productOffer._id : "" %>','<%= offer.offerType === "category" ? offer.categoryOffer._id : "" %>')">Edit</button>

                            <!-- Edit coupon Modal -->
                            <div class="modal fade" id="eeditOfferModal" tabindex="-1" aria-labelledby="editOfferModalLabel" aria-hidden="true">
                                <div class="modal-dialog modal-dialog-centered">
                                    <div class="modal-content">
                                        <div class="modal-header bg-primary text-white">
                                            <h5 class="modal-title" id="editOfferModalLabel">Edit offer</h5>
                                            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                                        </div>
                                        <div class="modal-body">
                                            <form id="editOfferForm" novalidate>
                                                <input type="hidden" id="editOfferId" name="offerId">
                                                <div class="mb-3">
                                                    <label for="eofferName" class="form-label">Offer Name</label>
                                                    <input type="text" class="form-control" id="eofferName" name="eofferName" required>
                                                    <div class="invalid-feedback">Please enter an offer name.</div>
                                                </div>
                                                <div class="mb-3">
                                                    <label for="eofferType" class="form-label">Offer Type</label>
                                                    <select class="form-control" id="eofferType" name="eofferType" required>
                                                        <option value="">Select offer type</option>
                                                        <option value="product">Products</option>
                                                        <option value="category">Category</option>
                                                    </select>
                                                    <div class="invalid-feedback">Please select an offer type.</div>
                                                </div>
                                                <div class="mb-3" id="edynamicFieldContainer"></div>
                                                <div class="mb-3">
                                                    <label for="ediscountPercentage" class="form-label">Discount percentage</label>
                                                    <input type="number" class="form-control" id="ediscountPercentage" name="ediscountPercentage" step="0.01" required>
                                                    <div class="invalid-feedback">Please enter a valid discount percentage.</div>
                                                </div>
                                                <div class="mb-3">
                                                    <label for="emaxRedeem" class="form-label">Maximum redeem amount</label>
                                                    <input type="number" class="form-control" id="emaxRedeem" name="emaxRedeem" required>
                                                    <div class="invalid-feedback">Please enter a maximum redeem amount.</div>
                                                </div>
                                                <div class="mb-3">
                                                    <label for="eofferDescription" class="form-label">Offer description</label>
                                                    <input type="text" class="form-control" id="eofferDescription" name="eofferDescription" required>
                                                    <div class="invalid-feedback">Please enter an offer description.</div>
                                                </div>
                                                <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                                                    <button type="button" class="btn btn-secondary me-md-2" data-bs-dismiss="modal">Cancel</button>
                                                    <button type="submit" class="btn btn-primary">Update offer</button>
                                                </div>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            </div>




                <button class="btn btn-danger" onclick="deleteOffer('<%= offer._id %>')">Delete</button>
              </div>
            </div>
          </div>
        <% }); %>
      </div>
          <% } else { %>
      <div class="col">
        <p class="text-center">No offer added yet.</p>
      </div>
          <% } %>
  </div>
  
          <!-- Add Offer Modal -->
<div class="modal fade" id="addOfferModal" tabindex="-1" aria-labelledby="addOfferModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="addOfferModalLabel">Add Offer</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="addOfferForm" novalidate>
                    <div class="mb-3">
                        <label for="offerName" class="form-label">Offer Name</label>
                        <input type="text" class="form-control" id="offerName" name="offerName" required>
                        <div class="invalid-feedback">Please enter an offer name.</div>
                    </div>
                    <div class="mb-3">
                        <label for="offerType" class="form-label">Offer Type</label>
                        <select class="form-control" id="offerType" name="offerType" required>
                            <option value="">Select offer type</option>
                            <option value="product">Products</option>
                            <option value="category">Category</option>
                        </select>
                        <div class="invalid-feedback">Please select an offer type.</div>
                    </div>
                    <div class="mb-3" id="dynamicFieldContainer"></div>
                    <div class="mb-3">
                        <label for="discountPercentage" class="form-label">Discount percentage</label>
                        <input type="number" class="form-control" id="discountPercentage" name="discountPercentage" step="0.01" required>
                        <div class="invalid-feedback">Please enter a valid discount percentage.</div>
                    </div>
                    <div class="mb-3">
                        <label for="maxRedeem" class="form-label">Maximum redeem amount</label>
                        <input type="number" class="form-control" id="maxRedeem" name="maxRedeem" required>
                        <div class="invalid-feedback">Please enter a maximum redeem amount.</div>
                    </div>
                    <div class="mb-3">
                        <label for="offerDescription" class="form-label">Offer description</label>
                        <input type="text" class="form-control" id="offerDescription" name="offerDescription" required>
                        <div class="invalid-feedback">Please enter an offer description.</div>
                    </div>
                    <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                        <button type="button" class="btn btn-secondary me-md-2" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">Add Offer</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
</div>

<!-- for products and categories  -->
<script>

const products = <%- JSON.stringify(products) %>;
const categories = <%- JSON.stringify(categories) %>;

    document.getElementById('offerType').addEventListener('change', function () {
    const selectedType = this.value;
    const dynamicFieldContainer = document.getElementById('dynamicFieldContainer');

    let fieldLabel = '';
    let options = '';
   

    if (selectedType === 'product') {
        fieldLabel = 'Select Product';
        products.forEach(product => {
            options += `<option value="${product._id}">${product.productName}</option>`;
        });
    } else if (selectedType === 'category') {
        fieldLabel = 'Select Category';
        categories.forEach(category => {
            options += `<option value="${category._id}">${category.categoryName}</option>`;
        });
    }

    dynamicFieldContainer.innerHTML = `
        <label for="dynamicField" class="form-label">${fieldLabel}</label>
        <select class="form-control" id="dynamicField" name="dynamicField" required>
            ${options}
        </select>
    `;
});
 </script>



// <script>
   document.getElementById('addOfferForm').addEventListener('submit', function (e) {
    e.preventDefault();
   
    const offerName = document.getElementById('offerName').value;
    const offerType= document.getElementById('offerType').value;
    console.log(offerType,'salman');
    let productOffer = null;
    let categoryOffer = null;

// Check the offer type and assign the appropriate value
if (offerType === "product") {
    productOffer = document.getElementById('dynamicField').value;
    console.log(productOffer,'product');
} else if (offerType === "category") {
    categoryOffer = document.getElementById('dynamicField').value;
    console.log(categoryOffer,'category');
}


    const discountPercentage = document.getElementById('discountPercentage').value;
    const maxRedeem = document.getElementById('maxRedeem').value;
    const offerDescription = document.getElementById('offerDescription').value;
    console.log(offerName);
    console.log(offerType);
    
   
    console.log(discountPercentage);
    console.log(maxRedeem);
    console.log(offerDescription);
   


    fetch('/admin/offer/add', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ 
                            offerName,
                            offerType,
                            productOffer,
                            categoryOffer,
                            discountPercentage,
                            maxRedeem,
                            offerDescription
                         }),
                         
    })
    .then(response => {
      if (!response.ok) {
        throw new Error('Network response was not ok');
      }
      return response.json();
    })
    .then(data => {
      console.log('Success:', data);
      const modal = new bootstrap.Modal(document.getElementById('addOfferModal'));
      modal.hide();
      location.reload(); // Refresh the page to update the category list
    })
    .catch((error) => {
      console.error('Error:', error);
      alert('Failed to add offer. Please try again.');
    });
  });


// const products = <%- JSON.stringify(products) %>;
// const categories = <%- JSON.stringify(categories) %>;

// document.getElementById('offerType').addEventListener('change', function () {
//     const selectedType = this.value;
//     const dynamicFieldContainer = document.getElementById('dynamicFieldContainer');

//     let fieldLabel = '';
//     let options = '';
   
//     if (selectedType === 'product') {
//         fieldLabel = 'Select Product';
//         options = '<option value="">Select a product</option>';
//         products.forEach(product => {
//             options += `<option value="${product._id}">${product.productName}</option>`;
//         });
//     } else if (selectedType === 'category') {
//         fieldLabel = 'Select Category';
//         options = '<option value="">Select a category</option>';
//         categories.forEach(category => {
//             options += `<option value="${category._id}">${category.categoryName}</option>`;
//         });
//     }

//     dynamicFieldContainer.innerHTML = `
//         <label for="dynamicField" class="form-label">${fieldLabel}</label>
//         <select class="form-control" id="dynamicField" name="dynamicField" required>
//             ${options}
//         </select>
//         <div class="invalid-feedback">Please select a ${selectedType}.</div>
//     `;
// });

// function validateForm() {
//     const form = document.getElementById('addOfferForm');
//     const inputs = form.querySelectorAll('input, select');
//     let isValid = true;

//     inputs.forEach(input => {
//         if (input.required && !input.value.trim()) {
//             input.classList.add('is-invalid');
//             isValid = false;
//         } else {
//             input.classList.remove('is-invalid');
//         }
//     });

//     return isValid;
// }

// document.getElementById('addOfferForm').addEventListener('submit', function (e) {
//     e.preventDefault();

//     if (!validateForm()) {
//         Swal.fire({
//             icon: 'error',
//             title: 'Validation Error',
//             text: 'Please fill in all required fields correctly.',
//         });
//         return;
//     }
   
//     const offerName = document.getElementById('offerName').value;
//     const offerType = document.getElementById('offerType').value;
//     let productOffer = null;
//     let categoryOffer = null;

//     if (offerType === "product") {
//         productOffer = document.getElementById('dynamicField').value;
//     } else if (offerType === "category") {
//         categoryOffer = document.getElementById('dynamicField').value;
//     }

//     const discountPercentage = document.getElementById('discountPercentage').value;
//     const maxRedeem = document.getElementById('maxRedeem').value;
//     const offerDescription = document.getElementById('offerDescription').value;

//     fetch('/admin/offer/add', {
//         method: 'POST',
//         headers: {
//             'Content-Type': 'application/json',
//         },
//         body: JSON.stringify({ 
//             offerName,
//             offerType,
//             productOffer,
//             categoryOffer,
//             discountPercentage,
//             maxRedeem,
//             offerDescription
//         }),
//     })
//     .then(response => {
//         if (!response.ok) {
//             throw new Error('Network response was not ok');
//         }
//         return response.json();
//     })
//     .then(data => {
//         console.log('Success:', data);
//         const modal = bootstrap.Modal.getInstance(document.getElementById('addOfferModal'));
//         modal.hide();
//         Swal.fire({
//             icon: 'success',
//             title: 'Success',
//             text: 'Offer added successfully!',
//         }).then(() => {
//             location.reload(); // Refresh the page to update the offer list
//         });
//     })
//     .catch((error) => {
//         console.error('Error:', error);
//         Swal.fire({
//             icon: 'error',
//             title: 'Error',
//             text: 'Failed to add offer. Please try again.',
//         });
//     });
// });

// // Add event listeners for real-time validation
// document.querySelectorAll('#addOfferForm input, #addOfferForm select').forEach(input => {
//     input.addEventListener('blur', function() {
//         if (this.required && !this.value.trim()) {
//             this.classList.add('is-invalid');
//         } else {
//             this.classList.remove('is-invalid');
//         }
//     });
// });
  

  

  
  //   edit---->
   // Function to open the edit modal and populate it with brand data

const eproducts = <%- JSON.stringify(products) %>;
const ecategories = <%- JSON.stringify(categories) %>;

function openEditModal(offerId, offerName, offerType, discountPercentage, maxRedeem, offerDescription, productOfferId, categoryOfferId) {
    document.getElementById('eeditOfferModal').value = offerId;
    document.getElementById('eofferName').value = offerName;
    document.getElementById('eofferType').value = offerType;
    document.getElementById('ediscountPercentage').value = discountPercentage;
    document.getElementById('emaxRedeem').value = maxRedeem;
    document.getElementById('eofferDescription').value = offerDescription;

    populateDynamicField(offerType, productOfferId, categoryOfferId);

   
    document.getElementById('eofferType').addEventListener('change', function () {
        const newOfferType = this.value;
        populateDynamicField(newOfferType); 
    });

    const editModal = new bootstrap.Modal(document.getElementById('eeditOfferModal'));
    editModal.show();
}

function populateDynamicField(selectedType, selectedProductOfferId, selectedCategoryOfferId) {
    const edynamicFieldContainer = document.getElementById('edynamicFieldContainer');
    let fieldLabel = '';
    let options = '';

    if (selectedType === 'product') {
        fieldLabel = 'Select Product';
        eproducts.forEach(product => {
            const isSelected = selectedProductOfferId === product._id ? 'selected' : '';
            options += `<option value="${product._id}" ${isSelected}>${product.productName}</option>`;
        });
    } else if (selectedType === 'category') {
        fieldLabel = 'Select Category';
        ecategories.forEach(category => {
            const isSelected = selectedCategoryOfferId === category._id ? 'selected' : '';
            options += `<option value="${category._id}" ${isSelected}>${category.categoryName}</option>`;
        });
    }

    edynamicFieldContainer.innerHTML = `
        <label for="edynamicField" class="form-label">${fieldLabel}</label>
        <select class="form-control" id="edynamicField" name="edynamicField" required>
            <option value="">Select ${selectedType}</option>
            ${options}
        </select>
        <div class="invalid-feedback">Please select a ${selectedType}.</div>
    `;
}

// Function to validate the form
function validateForm() {
    const form = document.getElementById('editOfferForm');
    const inputs = form.querySelectorAll('input, select');
    let isValid = true;

    inputs.forEach(input => {
        if (input.required && !input.value.trim()) {
            input.classList.add('is-invalid');
            isValid = false;
        } else {
            input.classList.remove('is-invalid');
        }
    });

    return isValid;
}

// Event listener for the edit form submission
document.getElementById('editOfferForm').addEventListener('submit', function (e) {
    e.preventDefault();

    if (!validateForm()) {
        Swal.fire({
            icon: 'error',
            title: 'Validation Error',
            text: 'Please fill in all required fields correctly.',
        });
        return;
    }

    const offerId = document.getElementById('eeditOfferModal').value;
    const offerName = document.getElementById('eofferName').value;
    const offerType = document.getElementById('eofferType').value;
    
    let productOffer = null;
    let categoryOffer = null;

    if (offerType === "product") {
        productOffer = document.getElementById('edynamicField').value;
    } else if (offerType === "category") {
        categoryOffer = document.getElementById('edynamicField').value;
    }

    const discountPercentage = document.getElementById('ediscountPercentage').value;
    const maxRedeem = document.getElementById('emaxRedeem').value;
    const offerDescription = document.getElementById('eofferDescription').value;

    fetch('/admin/offer/edit', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ 
            offerId,
            offerName,
            offerType,
            productOffer,
            categoryOffer,
            discountPercentage,
            maxRedeem,
            offerDescription
        }),
    })
    .then(response => {
        if (!response.ok) {
            return response.json().then(err => { throw err; });
        }
        return response.json();
    })
    .then(data => {
        console.log('Success:', data);
        const modal = bootstrap.Modal.getInstance(document.getElementById('eeditOfferModal'));
        modal.hide();
        Swal.fire({
            icon: 'success',
            title: 'Success',
            text: 'Offer updated successfully!',
        }).then(() => {
            location.reload(); // Refresh the page to update the offer list
        });
    })
    .catch((error) => {
        console.error('Error:', error);
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: error.message || 'Failed to update offer. Please try again.',
        });
    });
});

// Add event listeners for real-time validation
document.querySelectorAll('#editOfferForm input, #editOfferForm select').forEach(input => {
    input.addEventListener('blur', function() {
        if (this.required && !this.value.trim()) {
            this.classList.add('is-invalid');
        } else {
            this.classList.remove('is-invalid');
        }
    });
});
  
  
  // <---deleteoffer---->
  
  function deleteOffer(offerId) {
      console.log(offerId);
      Swal.fire({
          title: 'Are you sure?',
          text: "You want to delete this offer!",
          icon: 'warning',
          showCancelButton: true,
          confirmButtonColor: '#3085d6',
          cancelButtonColor: '#d33',
          confirmButtonText: 'Yes, delete it!'
      }).then((result) => {
          if (result.isConfirmed) {
              // Assuming you have a route to handle delete
              fetch('/admin/offer/delete', {
                  method: 'DELETE',
                  headers: {
                      'Content-Type': 'application/json',
                  },
                  body: JSON.stringify({offerId:offerId }) // replace with actual brand ID
              })
              .then(response => response.json())
              .then(data => {
                  if (data.success) {
                      Swal.fire(
                          'Deleted!',
                          'offer has been deleted.',
                          'success'
                      ).then(() => {
                          location.reload(); // Reload the page to reflect changes
                      });
                  } else {
                      Swal.fire(
                          'Error!',
                          'There was an issue deletee the offer.',
                          'error'
                      );
                  }
              })
              .catch(error => {
                  Swal.fire(
                      'Error!',
                      'There was an issue delete the offer.',
                      'error'
                  );
              });
          }
      });
  }
  
  
    
  
  </script>
  
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>










<!--   Core JS Files   -->
<script src="/static/adminfile/assets/js/core/jquery-3.7.1.min.js"></script>
<script src="/static/adminfile/assets/js/core/popper.min.js"></script>
<script src="/static/adminfile/assets/js/core/bootstrap.min.js"></script>

<!-- jQuery Scrollbar -->
<script src="/static/adminfile/assets/js/plugin/jquery-scrollbar/jquery.scrollbar.min.js"></script>
<!-- Datatables -->
<script src="/static/adminfile/assets/js/plugin/datatables/datatables.min.js"></script>
<!-- Kaiadmin JS -->
<script src="/static/adminfile/assets/js/kaiadmin.min.js"></script>
<!-- Kaiadmin DEMO methods, don't include it in your project! -->
<script src="/static/adminfile/assets/js/setting-demo2.js"></script>
<script>
$(document).ready(function () {
  $("#basic-datatables").DataTable({});

  $("#multi-filter-select").DataTable({
    pageLength: 5,
    initComplete: function () {
      this.api()
        .columns()
        .every(function () {
          var column = this;
          var select = $(
            '<select class="form-select"><option value=""></option></select>'
          )
            .appendTo($(column.footer()).empty())
            .on("change", function () {
              var val = $.fn.dataTable.util.escapeRegex($(this).val());

              column
                .search(val ? "^" + val + "$" : "", true, false)
                .draw();
            });

          column
            .data()
            .unique()
            .sort()
            .each(function (d, j) {
              select.append(
                '<option value="' + d + '">' + d + "</option>"
              );
            });
        });
    },
  });

  // Add Row
  $("#add-row").DataTable({
    pageLength: 5,
  });

  var action =
    '<td> <div class="form-button-action"> <button type="button" data-bs-toggle="tooltip" title="" class="btn btn-link btn-primary btn-lg" data-original-title="Edit Task"> <i class="fa fa-edit"></i> </button> <button type="button" data-bs-toggle="tooltip" title="" class="btn btn-link btn-danger" data-original-title="Remove"> <i class="fa fa-times"></i> </button> </div> </td>';

  $("#addRowButton").click(function () {
    $("#add-row")
      .dataTable()
      .fnAddData([
        $("#addName").val(),
        $("#addPosition").val(),
        $("#addOffice").val(),
        action,
      ]);
    $("#addRowModal").modal("hide");
  });
});
</script>