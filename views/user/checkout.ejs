<% include('../layouts/header.ejs')  %>
    <!-- Google Font -->
    <link href="https://fonts.googleapis.com/css2?family=Nunito+Sans:wght@300;400;600;700;800;900&display=swap"
    rel="stylesheet">

    <!-- Css Styles -->
    <link rel="stylesheet" href="/static/css/bootstrap.min.css" type="text/css">
    <link rel="stylesheet" href="/static/css/font-awesome.min.css" type="text/css">
    <link rel="stylesheet" href="/static/css/elegant-icons.css" type="text/css">
    <link rel="stylesheet" href="/static/css/magnific-popup.css" type="text/css">
    <link rel="stylesheet" href="/static/css/nice-select.css" type="text/css">
    <link rel="stylesheet" href="/static/css/owl.carousel.min.css" type="text/css">
    <link rel="stylesheet" href="/static/css/slicknav.min.css" type="text/css">
    <link rel="stylesheet" href="/static/css/style.css" type="text/css">


    <!-- Page Preloder -->
    <div id="preloder">
        <div class="loader"></div>
    </div>

    <!-- Offcanvas Menu Begin -->
    <div class="offcanvas-menu-overlay"></div>
    <div class="offcanvas-menu-wrapper">
        <div class="offcanvas__option">
            <div class="offcanvas__links">
                <a href="#">Sign in</a>
                <a href="#">FAQs</a>
            </div>
            <div class="offcanvas__top__hover">
                <span>Usd <i class="arrow_carrot-down"></i></span>
                <ul>
                    <li>USD</li>
                    <li>EUR</li>
                    <li>USD</li>
                </ul>
            </div>
        </div>
        <div class="offcanvas__nav__option">
            <a href="#" class="search-switch"><img src="/static/img/icon/search.png" alt=""></a>
            <a href="#"><img src="/static/img/icon/heart.png" alt=""></a>
            <a href="#"><img src="/static/img/icon/cart.png" alt=""> <span>0</span></a>
            <div class="price">$0.00</div>
        </div>
        <div id="mobile-menu-wrap"></div>
        <div class="offcanvas__text">
            <p>Free shipping, 30-day return or refund guarantee.</p>
        </div>
    </div>
    <!-- Offcanvas Menu End -->

    <!-- Header Section Begin -->
    <header class="header">
        
        <div class="container">
            <div class="row">
                <div class="col-lg-3 col-md-3">
                    <div class="header__logo">
                        <a href="./index.html"><img src="/static/img/logo.png" alt=""></a>
                    </div>
                </div>
                <div class="col-lg-6 col-md-6">
                    <nav class="header__menu mobile-menu">
                        <ul>
                            <li><a href="/home">Home</a></li>
                            <li class="active"><a href="/shop">Shop</a></li>
                            <li><a href="#">Pages</a>
                                <ul class="dropdown">
                                    <li><a href="./about.html">About Us</a></li>
                                    <li><a href="./shop-details.html">Shop Details</a></li>
                                    <li><a href="./shopping-cart.html">Shopping Cart</a></li>
                                    <li><a href="./checkout.html">Check Out</a></li>
                                    <li><a href="./blog-details.html">Blog Details</a></li>
                                </ul>
                            </li>
                            <li><a href="/userProfile">Account</a></li>
                            <li><a href="./contact.html">Contacts</a></li>
                        </ul>
                    </nav>
                </div>
                <div class="col-lg-3 col-md-3">
                    <div class="header__nav__option">
                       
                        <a href="#"><img src="/static/img/icon/heart.png" alt=""></a>
                        <a href="/home/cart"><img src="/static/img/icon/cart.png" alt=""> <span>0</span></a>
                       
                    </div>
                </div>
            </div>
            <div class="canvas__open"><i class="fa fa-bars"></i></div>
        </div>
    </header>
    <!-- Header Section End -->

    <!-- Breadcrumb Section Begin -->
    <section class="breadcrumb-option">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <div class="breadcrumb__text">
                        <h4>Shopping Cart</h4>
                        <div class="breadcrumb__links">
                            <a href="./index.html">Home</a>
                            <a href="./shop.html">Shop</a>
                            <span>Shopping Cart</span>
                            <span>Checkout</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!-- Breadcrumb Section End -->

    <!-- Shopping Cart Section Begin -->
    <section class="shopping-cart spad">
        <div class="container">
            <div class="row">
                <div class="col-lg-8">
                    <div class="shopping__cart__table">
                        <h3 style="color: black; text-align: center;">Checkout</h3>
                         <div class="border mb-3">
                        
                            <% if (address && address.length > 0) { %>
                        <div id="selectedAddress" class="address-card" data-address-id="<%=address[0]._id%>">
                            <% const firstAddress = address[0]; %>
                            <h5><%= firstAddress.addressName %></h5>
                            <p><%= firstAddress.addressEmail %>, <%= firstAddress.addressMobile %>,<%= firstAddress.addressStreet %></p>
                            <p><%= firstAddress.addressPost %>, <%= firstAddress.addressCity %></p>
                            <p><%= firstAddress.addressDistrict %>, <%= firstAddress.addressState %> - <%= firstAddress.addressPin %></p>
                        </div>
                    
                        <button class="mb-1" onclick="openModal()">Change Address</button>
                        <% } else { %>
                            <p class="text-center p-3">
                                You need to add an address to process checkout
                            </p>
                            <button type="button"  class=" btn btn-primary" data-toggle="modal" data-target="#addAddressModal">
                                Add New Address
                            </button>
                        <% } %>
                        <div id="addressModal" class="modal">
                            <div class="modal-content">
                                <span class="close" onclick="closeModal()">&times;</span>
                                <h2>Select an Address</h2>
                                <form id="addressForm">
                                    <% address.forEach((addres, index) => { %>
                                        <div class="address-card">
                                            <input type="radio" name="address" value="<%= index %>" id="addres<%= index %>">
                                            <label for="addres<%= index %>">
                                                <h3><%= addres.addressName %></h3>
                                                <p><%= addres.addressEmail %></p>
                                                <p><%= addres.addressMobile %></p>
                                                <p><%= addres.addressHouseNo %>, <%= addres.addressStreet %></p>
                                                <p><%= addres.addressPost %>, <%= addres.addressCity %></p>
                                                <p><%= addres.addressDistrict %>, <%= addres.addressState %> - <%= addres.addressPin %></p>
                                            </label>
                                            <div><button type="button" class="btn btn-primary me-2"  data-toggle="modal" data-target="#editAddressModal_<%= addres._id %>" >Edit</button></div>
                                        </div>
                                            <!-- modal for edit address   -->
                                            <div class="modal fade" id="editAddressModal_<%= addres._id %>">
                                              <div class="modal-dialog modal-md">
                                                  <div class="modal-content w-100">
                                                      <!-- Modal Header -->
                                                      <div class="modal-header" id="<%=address._id%>">
                                                          <h4 class="modal-title">Edit Address</h4>
                                                          <button type="button" class="close" data-dismiss="modal">&times;</button>
                                                      </div>
                                                      
                                                      <!-- Modal Body -->
                                                      <div class="modal-body">
                                                          <form id="editAddressForm">
                                                              <input type="hidden" id="editaddressId" name="editaddressId" value="<%= addres._id%>">
                                                              <div class="form-group">
                                                                  <label for="name">Full Name:</label>
                                                                  <input type="text" class="form-control" value="<%= addres.addressName %>" id="ename" name="name" required>
                                                                  <div class="error-message" id="enameError"></div>
                                                              </div>
                                                              <div class="form-group">
                                                                  <label for="email">Email:</label>
                                                                  <input type="email" class="form-control" value="<%= addres.addressEmail %>" id="eemail" name="email" required>
                                                                  <div class="error-message" id="eemailError"></div>
                                                              </div>
                                                              <div class="form-group">
                                                                  <label for="mobile">Mobile:</label>
                                                                  <input type="tel" class="form-control" value="<%= addres.addressMobile %>" id="emobile" name="mobile" required>
                                                                  <div class="error-message" id="emobileError"></div>
                                                              </div>
                                                              <div class="form-group">
                                                                  <label for="houseNo">House/Flat No:</label>
                                                                  <input type="text" class="form-control" value="<%= addres.addressHouseNo %>" id="ehouseNo" name="houseNo" required>
                                                                  <div class="error-message" id="ehouseNoError"></div>
                                                              </div>
                                                              <div class="form-group">
                                                                  <label for="street">Street:</label>
                                                                  <input type="text" class="form-control" value="<%= addres.addressStreet %>" id="estreet" name="street" required>
                                                                  <div class="error-message" id="estreetError"></div>
                                                              </div>
                                                              <div class="form-group">
                                                                  <label for="postOffice">Post Office:</label>
                                                                  <input type="text" class="form-control" value="<%= addres.addressPost %>" id="epostOffice" name="postOffice" required>
                                                                  <div class="error-message" id="epostOfficeError"></div>
                                                              </div>
                                                              <div class="form-group">
                                                                  <label for="city">City:</label>
                                                                  <input type="text" class="form-control" value="<%= addres.addressCity %>" id="ecity" name="city" required>
                                                                  <div class="error-message" id="ecityError"></div>
                                                              </div>
                                                              <div class="form-group">
                                                                  <label for="district">District:</label>
                                                                  <input type="text" class="form-control" value="<%= addres.addressDistrict %>" id="edistrict" name="district" required>
                                                                  <div class="error-message" id="edistrictError"></div>
                                                              </div>
                                                              <div class="form-group">
                                                                  <label for="state">State:</label>
                                                                  <input type="text" class="form-control" value="<%= addres.addressState %>" id="estate" name="state" required>
                                                                  <div class="error-message" id="estateError"></div>
                                                              </div>
                                                              <div class="form-group">
                                                                  <label for="pincode">Pincode:</label>
                                                                  <input type="text" class="form-control" value="<%= addres.addressPin %>" id="epincode" name="pincode" required>
                                                                  <div class="error-message" id="epincodeError"></div>
                                                              </div>
                                                          </form>
                                                      </div>
                                                      
                                                      <!-- Modal Footer -->
                                                      <div class="modal-footer">
                                                          <button type="button" class="btn btn-primary"  data-id="<%= addres._id %>" onclick="submitEditAddressForm()">Edit Address</button>
                                                          <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                                      </div>
                                                  </div>
                                              </div>
                                            </div>
                                    <% }) %>
                                </form>
                                <div class="row">
                                    <div class="col">
                                        <button class="btn-success" onclick="changeAddress()">Confirm</button>
                                    </div>
                                  
                                    <div class="col">
                                        <button type="button"  class=" btn btn-primary" data-toggle="modal" data-target="#addAddressModal">
                                            Add New Address
                                        </button>
                                        
                                    </div>
                                   
                                </div>
                            </div>
                        </div>

                    </div>

                        <table>
                            <thead>
                                <tr>
                                    <th>Product</th>
                                    <th>Quantity</th>
                                    <th>Total</th>
                                    <th></th>
                                </tr>
                            </thead>

                            <tbody>
                                <% if (cart && cart.length > 0) { %>
                                <% cart.forEach((car)=>{ %>
                                <tr data-product-id="<%= car.productId %>">
                                    <td class="product__cart__item">
                                        <div class="product__cart__item__pic">
                                            <img src="/static/productimages/<%=car.productImage%>" alt="" width="100px" height="100px">
                                        </div>
                                        <div class="product__cart__item__text">
                                            <span class="d-none"><%= car.productId %></span>
                                            <h4><%=car.productName%></h4>
                                            <h5>₹<%=car.ProductPrice%></h5>
                                            <h6><%=car.productColor%></h6>
                                        </div>
                                    </td>
                                    <td class="quantity__item l">
                                        <div class="quantity control ">
                                            <div class="pro-qty-2" data-cart-item-id="<%=car._id%>">
                                                
                                                <input class="pro-qty-2 text-center border-0" style="width: 50px;" type="text" value="<%=car.productQuantity%>" readonly>
                                                
                                            </div>
                                        </div>
                                    </td>
                                    <td class="cart__price">₹<%=car.cartPrice%></td>
                                </tr>
                                <% }); %>
                        <% } else { %>
                     <tr>
                       <td colspan="4">Your cart is empty</td>
                      </tr>
                           <% }%>
                            </tbody>
                        </table>
                    </div>
                    
                </div>
                <div class="col-lg-4">
                    <div class="cart__discount">
                        <h6>Discount codes</h6>
                        <form action="#">
                            <input type="text" placeholder="Coupon code">
                            <button type="submit">Apply</button>
                        </form>
                    </div>
                    <div class="cart__total">
                        <h6>Cart total</h6>
                        <ul>
                            <li>Price (<%= cart.length%>) <span class="cart__subtotal">₹0.00</span></li>
                            <li>Subtotal <span class="cart__total__amount">₹0.00</span></li>
                            <!-- <li>Total <span class="cart__total__amount">$0.00</span></li> -->
                        </ul>
                        <hr class="divider">

                        <!-- Payment options section -->
                        <h6>Payment Options</h6>
                        <ul>
                            <li>
                                <input type="radio" id="razorPay" name="paymentOption" value="razorPay">
                                <label for="razorPay">Razor Pay</label>
                            </li>
                            <li>
                                <input type="radio" id="wallet" name="paymentOption" value="wallet">
                                <label for="wallet">Wallet (Balance: ₹000.00)</label>
                            </li>
                            <li>
                                <input type="radio"  id="cod" name="paymentOption" value="cod" checked>
                                <label for="cod">Cash on Delivery</label>
                            </li>
                        </ul>
                    
                        <!-- Delivery date -->
                        <div class="delivery-date">
                            Delivery Date: <span class="text-primary">
                                <%= new Date(Date.now() + 3 * 24 * 60 * 60 * 1000).toLocaleDateString() %>
                            </span>
                        </div>

                        <a href="#" class="primary-btn" onclick="placeOrder()">Place order</a>
                    </div>
                </div>
            </div>
            
        </div>
    </section>
    <!-- Shopping Cart Section End -->

<!-- Footer Section Begin -->
    <footer class="footer">
        <div class="container">
            <div class="row">
                <div class="col-lg-3 col-md-6 col-sm-6">
                    <div class="footer__about">
                        <div class="footer__logo">
                            <a href="#"><img src="/static/img/footer-logo.png" alt=""></a>
                        </div>
                        <p>The customer is at the heart of our unique business model, which includes design.</p>
                        <a href="#"><img src="/static/img/payment.png" alt=""></a>
                    </div>
                </div>
                <div class="col-lg-2 offset-lg-1 col-md-3 col-sm-6">
                    <div class="footer__widget">
                        <h6>Shopping</h6>
                        <ul>
                            <li><a href="#">Clothing Store</a></li>
                            <li><a href="#">Trending Shoes</a></li>
                            <li><a href="#">Accessories</a></li>
                            <li><a href="#">Sale</a></li>
                        </ul>
                    </div>
                </div>
                <div class="col-lg-2 col-md-3 col-sm-6">
                    <div class="footer__widget">
                        <h6>Shopping</h6>
                        <ul>
                            <li><a href="#">Contact Us</a></li>
                            <li><a href="#">Payment Methods</a></li>
                            <li><a href="#">Delivary</a></li>
                            <li><a href="#">Return & Exchanges</a></li>
                        </ul>
                    </div>
                </div>
                <div class="col-lg-3 offset-lg-1 col-md-6 col-sm-6">
                    <div class="footer__widget">
                        <h6>NewLetter</h6>
                        <div class="footer__newslatter">
                            <p>Be the first to know about new arrivals, look books, sales & promos!</p>
                            <form action="#">
                                <input type="text" placeholder="Your email">
                                <button type="submit"><span class="icon_mail_alt"></span></button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-12 text-center">
                    <div class="footer__copyright__text">
                        <!-- Link back to Colorlib can't be removed. Template is licensed under CC BY 3.0. -->
                        <p>Copyright ©
                            <script>
                                document.write(new Date().getFullYear());
                            </script>2020
                            All rights reserved | This template is made with <i class="fa fa-heart-o"
                            aria-hidden="true"></i> by <a href="https://colorlib.com" target="_blank">Colorlib</a>
                        </p>
                        <!-- Link back to Colorlib can't be removed. Template is licensed under CC BY 3.0. -->
                    </div>
                </div>
            </div>
        </div>
    </footer>
    <!-- Footer Section End -->

    <!-- Search Begin -->
    <div class="search-model">
        <div class="h-100 d-flex align-items-center justify-content-center">
            <div class="search-close-switch">+</div>
            <form class="search-model-form">
                <input type="text" id="search-input" placeholder="Search here.....">
            </form>
        </div>
    </div>
    <!-- Search End -->

    <!-- modal for add address   -->
<div class="modal fade" id="addAddressModal" tabindex="-1" role="dialog" aria-labelledby="addAddressModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content w-100">
            <div class="modal-header">
                <h5 class="modal-title" id="addAddressModalLabel">Add New Address</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            
            <!-- Modal Body -->
            <div class="modal-body">
                <form id="addAddressForm">
                    <div class="form-group">
                        
                        <label for="name">Full Name:</label>
                        <input type="text" class="form-control" id="name" name="name" required>
                        <div class="error-message" id="nameError"></div>
                    </div>
                    <div class="form-group">
                        <label for="email">Email:</label>
                        <input type="email" class="form-control" id="email" name="email" required>
                        <div class="error-message" id="emailError"></div>
                    </div>
                    <div class="form-group">
                        <label for="mobile">Mobile:</label>
                        <input type="tel" class="form-control" id="mobile" name="mobile" required>
                        <div class="error-message" id="mobileError"></div>
                    </div>
                    <div class="form-group">
                        <label for="houseNo">House/Flat No:</label>
                        <input type="text" class="form-control" id="houseNo" name="houseNo" required>
                        <div class="error-message" id="houseNoError"></div>
                    </div>
                    <div class="form-group">
                        <label for="street">Street:</label>
                        <input type="text" class="form-control" id="street" name="street" required>
                        <div class="error-message" id="streetError"></div>
                    </div>
                    <div class="form-group">
                        <label for="postOffice">Post Office:</label>
                        <input type="text" class="form-control" id="postOffice" name="postOffice" required>
                        <div class="error-message" id="postOfficeError"></div>
                    </div>
                    <div class="form-group">
                        <label for="city">City:</label>
                        <input type="text" class="form-control" id="city" name="city" required>
                        <div class="error-message" id="cityError"></div>
                    </div>
                    <div class="form-group">
                        <label for="district">District:</label>
                        <input type="text" class="form-control" id="district" name="district" required>
                        <div class="error-message" id="districtError"></div>
                    </div>
                    <div class="form-group">
                        <label for="state">State:</label>
                        <input type="text" class="form-control" id="state" name="state" required>
                        <div class="error-message" id="stateError"></div>
                    </div>
                    <div class="form-group">
                        <label for="pincode">Pincode:</label>
                        <input type="text" class="form-control" id="pincode" name="pincode" required>
                        <div class="error-message" id="pincodeError"></div>
                    </div>
                </form>
            </div>
            <div class="snackbar"></div>
            <!-- Modal Footer -->
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" onclick="submitAddressForm()">Save Address</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>

</div>




<style>
.cart__total {
    padding: 20px;
    border: 1px solid #ddd;
    border-radius: 5px;
}

.cart__total ul {
    list-style-type: none;
    padding: 0;
}

.cart__total ul li {
    margin-bottom: 10px;
}

.divider {
    border: none;
    border-top: 1px solid #ddd; /* Adjust color and thickness as needed */
    margin: 20px 0; /* Space above and below the line */
}

.primary-btn {
    background-color: #007bff; /* Adjust color as needed */
    color: white;
    padding: 10px 20px;
    text-align: center;
    text-decoration: none;
    border-radius: 5px;
    display: inline-block;
}

.primary-btn:hover {
    background-color: #0056b3; /* Adjust hover color as needed */
}


.address-card { 
    border: 1px solid #ccc;
    padding: 10px;
    margin-bottom: 10px;
     }

.modal { 
    display: none; 
    position: fixed; 
    z-index: 1;
    left: 0;
    top: 0; 
    width: 100%; 
     height: 100%;  
     overflow: auto; 
    background-color: rgba(0,0,0,0.4);
      }
.modal-content {  
    background-color: #fefefe;  
    margin: 15% auto; 
    padding: 20px;
    border: 1px solid #888; 
    width: 50%;
                }
 .close { 
    color: #aaa; 
    float: right; 
    font-size: 28px; 
    font-weight: bold; 
    cursor: pointer; 
     }
      
 .error-message {
            color: red;
            font-size: 0.8em;
            margin-top: 5px;
        }

        .modal {
    z-index: 1050; /* Default Bootstrap modal z-index */
}
.modal-backdrop {
    z-index: 1040; /* Default Bootstrap backdrop z-index */
}

.swal-custom-popup {
            background-color: #f8f9fa;
            border-radius: 0.5rem;
            padding: 1rem;
            text-align: center;
        }
    
    
        #snackbar {
    visibility: hidden;
    min-width: 250px;
    margin-left: -125px;
    background-color: #333;
    color: #fff;
    text-align: center;
    border-radius: 2px;
    padding: 16px;
    position: fixed;
    z-index: 1;
    left: 50%;
    bottom: 30px;
}

#snackbar.show {
    visibility: visible;
    -webkit-animation: fadein 0.5s, fadeout 0.5s 2.5s;
    animation: fadein 0.5s, fadeout 0.5s 2.5s;
}

@-webkit-keyframes fadein {
    from {bottom: 0; opacity: 0;}
    to {bottom: 30px; opacity: 1;}
}

@keyframes fadein {
    from {bottom: 0; opacity: 0;}
    to {bottom: 30px; opacity: 1;}
}

@-webkit-keyframes fadeout {
    from {bottom: 30px; opacity: 1;}
    to {bottom: 0; opacity: 0;}
}

@keyframes fadeout {
    from {bottom: 30px; opacity: 1;}
    to {bottom: 0; opacity: 0;}
}
</style>

<!-- order placing  -->
<script>
function placeOrder() {
    // Get selected address
    const selectedAddress = document.getElementById('selectedAddress');
    const addressText = selectedAddress.textContent.trim();
    const selectedAddressElement = document.getElementById('selectedAddress');
    console.log(selectedAddressElement,'sasasa');
  

    const addressId = selectedAddressElement.getAttribute('data-address-id');
    if(!addressId){
       
    }
console.log(addressId);
    // Get cart items
    const cartItems = [];
    const rows = document.querySelectorAll('.shopping__cart__table tbody tr');
    rows.forEach(row => {
        const productId = row.querySelector('.product__cart__item__text span').textContent;
        // const addressId = row.getAttribute('data-address-id');
        const productName = row.querySelector('.product__cart__item__text h4').textContent;
        const productPrice = row.querySelector('.product__cart__item__text h5').textContent;
        const productColor = row.querySelector('.product__cart__item__text h6').textContent;
        
        const quantity = row.querySelector('.pro-qty-2 input').value;
        const totalPrice = row.querySelector('.cart__price').textContent;
        
        cartItems.push({
            productId,
            productName,
            productPrice,
            productColor,
            quantity,
            totalPrice
        });
    });

   


    // Get cart total
    const subtotal = document.querySelector('.cart__subtotal').textContent;
    const total = document.querySelector('.cart__total__amount').textContent;

    // Get selected payment option
    const paymentOption = document.querySelector('input[name="paymentOption"]:checked').value;

    // Get delivery date
    const deliveryDate = document.querySelector('.delivery-date span').textContent;

    // Construct order object
    const order = {
        addressId,
        address: addressText,
        items: cartItems,
        subtotal,
        total,
        paymentOption,
        deliveryDate
    };

    // Log the order object (for testing purposes)
    console.log('Order placed:', order);
    fetch('/placeOrder', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(order),
            })
            .then(response => {
                if (!response.ok) {
                    return response.text().then(text => {
                        throw new Error(`HTTP error! status: ${response.status}, body: ${text}`);
                    });
                }
                return response.json();
            })
            .then(data => {
                console.log('Success:', data);

                // Show SweetAlert modal
                Swal.fire({
                    icon: 'success',
                    title: 'Order Placed!',
                    text: 'Your order has been placed successfully. Thank you for shopping with us!',
                    showConfirmButton: true,
                    timer: 3000,
                    timerProgressBar: true,
                    confirmButtonText: 'Continue Shopping',
                    confirmButtonColor: '#3085d6',
                    backdrop: true,
                    customClass: {
                        popup: 'swal-custom-popup'
                    }
                }).then((result) => {
                    if (result.isConfirmed) {
                        window.location.href = '/shop'; // Redirect to shop page on button click
                    }
                });

                // Redirect to shop page after a delay (e.g., 3 seconds)
                setTimeout(() => {
                    window.location.href = '/shop'; // Adjust the URL to your shop page
                }, 3000);
            })
            .catch((error) => {
                showSnackbar(data.message);
            setTimeout(() => location.reload(),1500);
                console.error('Error:', error);

               
            });
            function showSnackbar(message) {
    // Create snackbar container if it doesn't exist
    let snackbar = document.getElementById("snackbar");
    if (!snackbar) {
        snackbar = document.createElement("div");
        snackbar.id = "snackbar";
        document.body.appendChild(snackbar);
    }

    // Set the message
    snackbar.textContent = message;

    // Add the "show" class
    snackbar.className = "show";

    // After 3 seconds, remove the show class
    setTimeout(() => {
        snackbar.className = snackbar.className.replace("show", "");
    }, 3000);
}
}
</script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.all.min.js"></script>


<!-- edit address -->
<script>
    function validateEditAddressForm() {
        let isValid = true;
        const nameRegex = /^[a-zA-Z\s]{2,50}$/;
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        const mobileRegex = /^\+?[\d\s()-]{10,15}$/;
        const pincodeRegex = /^\d{6}$/;
    
        // Validate Name
        const name = document.getElementById('ename').value.trim();
        if (!name) {
            document.getElementById('enameError').textContent = 'Name is required';
            isValid = false;
        } else if (!nameRegex.test(name)) {
            document.getElementById('enameError').textContent = 'Name should be 2-50 characters long and contain only letters';
            isValid = false;
        } else {
            document.getElementById('enameError').textContent = '';
        }
    
        // Validate Email
        const email = document.getElementById('eemail').value.trim();
        if (!email) {
            document.getElementById('eemailError').textContent = 'Email is required';
            isValid = false;
        } else if (!emailRegex.test(email)) {
            document.getElementById('eemailError').textContent = 'Please enter a valid email address';
            isValid = false;
        } else {
            document.getElementById('eemailError').textContent = '';
        }
    
        // Validate Mobile
        const mobile = document.getElementById('emobile').value.trim();
        if (!mobile) {
            document.getElementById('emobileError').textContent = 'Mobile number is required';
            isValid = false;
        } else if (!mobileRegex.test(mobile)) {
            document.getElementById('emobileError').textContent = 'Please enter a valid mobile number';
            isValid = false;
        } else {
            document.getElementById('emobileError').textContent = '';
        }
    
        // Validate House/Flat No
        const houseNo = document.getElementById('ehouseNo').value.trim();
        if (!houseNo) {
            document.getElementById('ehouseNoError').textContent = 'House/Flat No is required';
            isValid = false;
        } else {
            document.getElementById('ehouseNoError').textContent = '';
        }
    
        // Validate Street
        const street = document.getElementById('estreet').value.trim();
        if (!street) {
            document.getElementById('estreetError').textContent = 'Street is required';
            isValid = false;
        } else {
            document.getElementById('estreetError').textContent = '';
        }
    
        // Validate Post Office
        const postOffice = document.getElementById('epostOffice').value.trim();
        if (!postOffice) {
            document.getElementById('epostOfficeError').textContent = 'Post Office is required';
            isValid = false;
        } else {
            document.getElementById('epostOfficeError').textContent = '';
        }
    
        // Validate City
        const city = document.getElementById('ecity').value.trim();
        if (!city) {
            document.getElementById('ecityError').textContent = 'City is required';
            isValid = false;
        } else {
            document.getElementById('ecityError').textContent = '';
        }
    
        // Validate District
        const district = document.getElementById('edistrict').value.trim();
        if (!district) {
            document.getElementById('edistrictError').textContent = 'District is required';
            isValid = false;
        } else {
            document.getElementById('edistrictError').textContent = '';
        }
    
        // Validate State
        const state = document.getElementById('estate').value.trim();
        if (!state) {
            document.getElementById('estateError').textContent = 'State is required';
            isValid = false;
        } else {
            document.getElementById('estateError').textContent = '';
        }
    
        // Validate Pincode
        const pincode = document.getElementById('epincode').value.trim();
        if (!pincode) {
            document.getElementById('epincodeError').textContent = 'Pincode is required';
            isValid = false;
        } else if (!pincodeRegex.test(pincode)) {
            document.getElementById('epincodeError').textContent = 'Please enter a valid 6-digit pincode';
            isValid = false;
        } else {
            document.getElementById('epincodeError').textContent = '';
        }
    
        return isValid;
    }

    
    async function submitEditAddressForm() {
        if (validateEditAddressForm()) {
            const form = document.getElementById('editAddressForm');
       console.log(form);
            const formData = new FormData(form);
    
            const data = {
                addressID:formData.get('editaddressId') ,
                name: formData.get('name'),
                email: formData.get('email'),
                mobile: formData.get('mobile'),
                houseNo: formData.get('houseNo'),
                street: formData.get('street'),
                postOffice: formData.get('postOffice'),
                city: formData.get('city'),
                district: formData.get('district'),
                state: formData.get('state'),
                pincode: formData.get('pincode')
            };
    
            try {
                const response = await fetch('/userProfile/address/edit', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                });
    
                if (response.ok) {
                   
                    setTimeout(() => location.reload(), 1000);
                    $('#addAddressModal').modal('hide');
                    // Optionally, you can reload the page or update the address list here
                } else {
                    const errorData = await response.json();
                    alert(errorData.message || 'Error adding address');
                }
            } catch (error) {
                console.error('Network error:', error);
                alert('Network error');
            }
        }
    }
    </script>




<!-- add new address -->
<script>
    function validateAddressForm() {
        let isValid = true;
        const nameRegex = /^[a-zA-Z\s]{2,50}$/;
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        const mobileRegex = /^\+?[\d\s()-]{10,15}$/;
        const pincodeRegex = /^\d{6}$/;
    
        // Validate Name
        const name = document.getElementById('name').value.trim();
        if (!name) {
            document.getElementById('nameError').textContent = 'Name is required';
            isValid = false;
        } else if (!nameRegex.test(name)) {
            document.getElementById('nameError').textContent = 'Name should be 2-50 characters long and contain only letters';
            isValid = false;
        } else {
            document.getElementById('nameError').textContent = '';
        }
    
        // Validate Email
        const email = document.getElementById('email').value.trim();
        if (!email) {
            document.getElementById('emailError').textContent = 'Email is required';
            isValid = false;
        } else if (!emailRegex.test(email)) {
            document.getElementById('emailError').textContent = 'Please enter a valid email address';
            isValid = false;
        } else {
            document.getElementById('emailError').textContent = '';
        }
    
        // Validate Mobile
        const mobile = document.getElementById('mobile').value.trim();
        if (!mobile) {
            document.getElementById('mobileError').textContent = 'Mobile number is required';
            isValid = false;
        } else if (!mobileRegex.test(mobile)) {
            document.getElementById('mobileError').textContent = 'Please enter a valid mobile number';
            isValid = false;
        } else {
            document.getElementById('mobileError').textContent = '';
        }
    
        // Validate House/Flat No
        const houseNo = document.getElementById('houseNo').value.trim();
        if (!houseNo) {
            document.getElementById('houseNoError').textContent = 'House/Flat No is required';
            isValid = false;
        } else {
            document.getElementById('houseNoError').textContent = '';
        }
    
        // Validate Street
        const street = document.getElementById('street').value.trim();
        if (!street) {
            document.getElementById('streetError').textContent = 'Street is required';
            isValid = false;
        } else {
            document.getElementById('streetError').textContent = '';
        }
    
        // Validate Post Office
        const postOffice = document.getElementById('postOffice').value.trim();
        if (!postOffice) {
            document.getElementById('postOfficeError').textContent = 'Post Office is required';
            isValid = false;
        } else {
            document.getElementById('postOfficeError').textContent = '';
        }
    
        // Validate City
        const city = document.getElementById('city').value.trim();
        if (!city) {
            document.getElementById('cityError').textContent = 'City is required';
            isValid = false;
        } else {
            document.getElementById('cityError').textContent = '';
        }
    
        // Validate District
        const district = document.getElementById('district').value.trim();
        if (!district) {
            document.getElementById('districtError').textContent = 'District is required';
            isValid = false;
        } else {
            document.getElementById('districtError').textContent = '';
        }
    
        // Validate State
        const state = document.getElementById('state').value.trim();
        if (!state) {
            document.getElementById('stateError').textContent = 'State is required';
            isValid = false;
        } else {
            document.getElementById('stateError').textContent = '';
        }
    
        // Validate Pincode
        const pincode = document.getElementById('pincode').value.trim();
        if (!pincode) {
            document.getElementById('pincodeError').textContent = 'Pincode is required';
            isValid = false;
        } else if (!pincodeRegex.test(pincode)) {
            document.getElementById('pincodeError').textContent = 'Please enter a valid 6-digit pincode';
            isValid = false;
        } else {
            document.getElementById('pincodeError').textContent = '';
        }
    
        return isValid;
    }
    
    async function submitAddressForm() {
        if (validateAddressForm()) {
            const form = document.getElementById('addAddressForm');
            const formData = new FormData(form);
    
            const data = {
                name: formData.get('name'),
                email: formData.get('email'),
                mobile: formData.get('mobile'),
                houseNo: formData.get('houseNo'),
                street: formData.get('street'),
                postOffice: formData.get('postOffice'),
                city: formData.get('city'),
                district: formData.get('district'),
                state: formData.get('state'),
                pincode: formData.get('pincode')
            };
    
            try {
                const response = await fetch('/userProfile/address', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                });
    
                if (response.ok) {
                    // alert('Address added successfully');
                    setTimeout(() => location.reload(), 1000);
                    $('#addAddressModal').modal('hide');
                    // Optionally, you can reload the page or update the address list here
                } else {
                    const errorData = await response.json();
                    alert(errorData.message || 'Error adding address');
                }
            } catch (error) {
                console.error('Network error:', error);
                alert('Network error');
            }
        }
    }

</script>



<!-- modal for change address -->
<script>
      const addresses = <%- JSON.stringify(address) %>;
      console.log(addresses,'jj');
        let selectedAddressIndex = 0;

        function openModal() {
            document.getElementById('addressModal').style.display = 'block';
        }

        function closeModal() {
            document.getElementById('addressModal').style.display = 'none';
        }

        function changeAddress() {
            const selectedAddress = document.querySelector('input[name="address"]:checked');
        if (selectedAddress) {
            const addressId = selectedAddress.value;
            console.log('Selected Address ID:', addressId);
            updateSelectedAddress(addressId)
            closeModal()

        }
            
        }

        function updateSelectedAddress(selectedAddressIndex) {
            const address = addresses[selectedAddressIndex];
            const addressHtml = `
                <h3>${address.addressName}</h3>
                <p>${address.addressEmail}</p>
                <p>${address.addressMobile}</p>
                <p>${address.addressHouseNo}, ${address.addressStreet}</p>
                <p>${address.addressPost}, ${address.addressCity}</p>
                <p>${address.addressDistrict}, ${address.addressState} - ${address.addressPin}</p>
            `;
            const selectedAddressElement = document.getElementById('selectedAddress');
            document.getElementById('selectedAddress').innerHTML = addressHtml;
            selectedAddressElement.setAttribute('data-address-id', address._id);
        }

        function editAddress() {
            const form = document.getElementById('addressForm');
            const selectedRadio = form.querySelector('input[name="address"]:checked');
            if (selectedRadio) {
                const addressIndex = parseInt(selectedRadio.value);
                // Here you would typically redirect to an edit page or open an edit modal
                alert(`Edit address at index ${addressIndex}`);
            }
        }
</script>
 
<script>
    function updateCart() {
    let subtotal = 0;

    // Select all rows in the cart table that contain cart items
    const cartRows = document.querySelectorAll('tbody tr'); // Adjusted to ensure only cart items are selected

    // Iterate over each row
    cartRows.forEach(row => {
        // Get the price element within the current row
        const priceElement = row.querySelector('.cart__price');

        // Get the input element within the current row
        const quantityInputElement = row.querySelector('.pro-qty-2 input');

        // Ensure both elements exist before proceeding
        if (priceElement && quantityInputElement) {
            // Extract the price as a floating-point number
            const priceText = priceElement.textContent.replace('₹', '').trim();
            const price = parseFloat(priceText);

            // Extract the quantity as an integer
            const quantity = parseInt(quantityInputElement.value);

            console.log(`Price: ${price}, Quantity: ${quantity}`);

            // Add the total price for this item to the subtotal
            subtotal += price ;
            console.log(subtotal+"aaa");
        }
    });

    console.log('Subtotal:', subtotal); // Log the final subtotal

    // Update the subtotal and total elements on the page
    const subtotalElement = document.querySelector('.cart__subtotal');
    if (subtotalElement) {
        subtotalElement.innerHTML = `₹${subtotal.toFixed(2)}`;
    }

    const totalElement = document.querySelector('.cart__total__amount');
    if (totalElement) {
        totalElement.innerHTML = `₹${subtotal.toFixed(2)}`;
    }
}


    document.addEventListener('DOMContentLoaded', function() {
        updateCart();
    });
</script>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>


 <!-- Js Plugins -->
    <script src="/static/js/jquery-3.3.1.min.js"></script>
    <script src="/static/js/bootstrap.min.js"></script>
    <script src="/static/js/jquery.nice-select.min.js"></script>
    <script src="/static/js/jquery.nicescroll.min.js"></script>
    <script src="/static/js/jquery.magnific-popup.min.js"></script>
    <script src="/static/js/jquery.countdown.min.js"></script>
    <script src="/static/js/jquery.slicknav.js"></script>
    <script src="/static/js/mixitup.min.js"></script>
    <script src="/static/js/owl.carousel.min.js"></script>
    <script src="/static/js/main.js"></script>

    <% include('../layouts/footer.ejs')  %>